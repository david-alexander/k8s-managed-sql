{{ range $i, $instance := $.Values.sqlServer.instances }}
apiVersion: v1
kind: Service
metadata:
  labels:
    app: k8s-managed-sql
    role: sqlserver
    instance: {{ $instance.name }}
  name: sqlserver-{{ $instance.name }}
spec:
  ports:
  - port: 1433
    protocol: TCP
  selector:
    app: k8s-managed-sql
    role: sqlserver
    instance: {{ $instance.name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sqlserver-{{ $instance.name }}
  labels:
    app: k8s-managed-sql
    role: sqlserver
    instance: {{ $instance.name }}
spec:
  serviceName: sqlserver-{{ $instance.name }}
  replicas: 1
  selector:
    matchLabels:
      app: k8s-managed-sql
      role: sqlserver
      instance: {{ $instance.name }}
  template:
    metadata:
      labels:
        app: k8s-managed-sql
        role: sqlserver
        instance: {{ $instance.name }}
    spec:
      containers:
      - image: {{ $.Values.sqlServer.image }}
        env:
        - name: ACCEPT_EULA
          value: 'Y'
        - name: SA_PASSWORD
          value: {{ $instance.password }}
        - name: TZ
          value: {{ $instance.timezone }}
        name: sqlserver
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 1433
        volumeMounts:
        - name: data
          mountPath: "/var/opt/mssql"
        volumeMounts:
        - name: config
          mountPath: "/var/opt/mssql/mssql.conf"
          subPath: "mssql.conf"
        resources:
          limits:
            memory: "{{ $instance.memory }}"
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: sqlserver-{{ $instance.name }}-config
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: sqlserver-{{ $instance.name }}-config
data:
  mssql.conf: |
    [network]
    tcpport=1433{{ range $i, $port := untilStep (int $instance.ports.first) (int (add1 $instance.ports.last)) 1 }},{{$port}}{{end}}
{{ range $i, $port := untilStep (int $instance.ports.first) (int (add1 $instance.ports.last)) 1 }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: k8s-managed-sql
    role: sqlserver
    instance: {{ $instance.name }}
  name: sqlserver-{{ $instance.name }}-{{ $port }}
spec:
  ports:
  - port: 1433
    targetPort: {{ $port }}
    protocol: TCP
  selector:
    app: k8s-managed-sql
    role: sqlserver
    instance: {{ $instance.name }}
{{ end }}
{{ end }}